# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.



#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
    Sequence:
        type: str
    Shot:
        type: str
    Step:
        type: str
    sg_asset_type:
        type: str
    Asset:
        type: str
    name:
        type: str
        filter_by: alphanumeric
    iteration:
        type: int
    version:
        type: int
        format_spec: "03"
    version_four:
       type: int
       format_spec: "04"
       alias: version
    timestamp:
        type: str
    width:
        type: int
    height:
        type: int
    segment_name:
        type: str

    # Represents the optional output name for frames written by the Shotgun Write Node
    nuke.output:
        alias: output
        type: str
        filter_by: alphanumeric
        # default name for 'ouput' in nuke
        # default: desc

    # Represents the optional output name for frames written by the After Effects Publish Rendering Plugin
    afx.comp:
        alias: comp
        type: str
        filter_by: alphanumeric
    afx.mov.ext:
        alias: extension
        type: str
        choices:
            mov: Quicktime Movie (.mov)
            avi: Audio Video Interleaved (.avi)

    SEQ:
        type: sequence
        format_spec: "04"

    # Represents a frame sequence exported from Flame
    flame.frame:
        type: sequence
        format_spec: "08"

    eye:
        type: str

    houdini.node:
        alias: node
        type: str
    aov_name:
        type: str

    # these are used by the Hiero exporter and pipeline
    YYYY:
        type: int
        format_spec: "04"
    MM:
        type: int
        format_spec: "02"
    DD:
        type: int
        format_spec: "02"
        alias: DD
    project:
        type: str
    track:
        type: str
    tk_version:
        type: str

    # These are used for the Mari UDIM pipeline:
    UDIM:
        type: sequence
        default: "<UDIM>"
    mari.channel:
        type: str
        alias: channel
    mari.layer:
        type: str
        alias: layer
    mari.project_name:
        type: str
        alias: name
    asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    task_name:
        type: str
        shotgun_entity_type: Task
        shotgun_field_name: content

    # Maya supports two extension types.
    maya_extension:
        type: str
        choices:
            ma: Maya Ascii (.ma)
            mb: Maya Binary (.mb)
        default: ma
        alias: extension

#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:

    # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
    # templates. This also makes it easy to change any of the common root paths and have the
    # changes apply to all templates that use them.
    #
    # These don't require the standard formatting (with definition and root_name) because they
    # will be set within each template that uses the alias.
    project_root: ./

    sequence_root: shots/{Sequence}

    shot_root: shots/{Sequence}/{Shot}
    shot_step: shots/{Sequence}/{Shot}/{Step}

    shot_work_area: shots/{Sequence}/{Shot}/{Step}/work
    shot_publish_area: shots/{Sequence}/{Shot}/{Step}/publish

    asset_root: assets/{Asset}
    asset_step: assets/{Asset}/{Step}

    asset_work_area: assets/{Asset}/{Step}/work
    asset_publish_area: assets/{Asset}/{Step}/publish

    elements_library: elements/library

    ##########################################################################################
    #
    # Pipeline paths
    #
    # Any path template starting with "pipe_" will get an environment variable automatically
    # set before application launch by the before_app_launch.py hook.
    #

    pipe_ocio_area:
        definition: 'pipeline/color'
    pipe_ocio_config:
        definition: 'pipeline/color/config.ocio'
    pipe_ocio_config_3d:
        definition: 'pipeline/color/config_3d.ocio'

    pipe_nuke_path:
        definition: 'pipeline/nuke/python'
    pipe_nuke_tools_path:
        definition: 'pipeline/nuke/tools'

    pipe_hiero_path:
        definition: 'pipeline/hiero/python'

    pipe_maya_path:
        definition: 'pipeline/maya'
    pipe_maya_script_path:
        definition: 'pipeline/maya/scripts'
    pipe_maya_module_path:
        definition: 'pipeline/maya/modules'
    pipe_maya_plugin_path:
        definition: 'pipeline/maya/plugins'

    pipe_houdini_path:
        definition: 'pipeline/houdini'

    ##########################################################################################
    #
    # Project level paths
    #

    #
    # Hiero
    #

    # The location of WIP files
    hiero_project_work_area:
        definition: 'editorial/work'
    hiero_project_work:
        definition: 'editorial/work/{name}_v{version}.hrox'
    hiero_project_snapshot:
        definition: 'editorial/work/snapshots/{name}_v{version}_{timestamp}.hrox'

    # The location of published hiero files
    hiero_project_publish_area:
        definition: 'editorial/publish'
    hiero_project_publish:
        definition: 'editorial/publish/{name}_v{version}.hrox'


    ##########################################################################################
    # Sequence level paths
    #


    ##########################################################################################
    # Shot level paths
    #

    #
    # Flame
    #

    flame_segment_clip:
        definition: 'sequences/{Sequence}/{Shot}/finishing/clip/sources/{segment_name}.clip'
    flame_shot_clip:
        definition: 'sequences/{Sequence}/{Shot}/finishing/clip/{Shot}.clip'
    flame_shot_batch:
        definition: 'sequences/{Sequence}/{Shot}/finishing/batch/{Shot}.v{version}.batch'
    flame_shot_render_dpx:
        definition: 'sequences/{Sequence}/{Shot}/finishing/renders/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.dpx'
    flame_shot_render_exr:
        definition: 'sequences/{Sequence}/{Shot}/finishing/renders/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.exr'
    flame_shot_comp_dpx:
        definition: 'sequences/{Sequence}/{Shot}/finishing/comp/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.dpx'
    flame_shot_comp_exr:
        definition: 'sequences/{Sequence}/{Shot}/finishing/comp/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.exr'

    #
    # Photoshop
    #

    # The location of WIP files
    shot_work_area_photoshop:
        definition: '@shot_work_area/photoshop'
    photoshop_shot_work:
        definition: '@shot_work_area/photoshop/{name}.v{version}.psd'
    photoshop_shot_snapshot:
        definition: '@shot_work_area/photoshop/snapshots/{name}.v{version}.{timestamp}.psd'

    # The location of published files
    shot_publish_area_photoshop:
        definition: '@shot_publish_area/photoshop'
    photoshop_shot_publish:
        definition: '@shot_publish_area/photoshop/{name}.v{version}.psd'


    #
    # After Effects
    #

    # The location of WIP files
    shot_work_area_aftereffects:
        definition: '@shot_work_area/aftereffects'
    aftereffects_shot_work:
        definition: '@shot_work_area/aftereffects/{name}.v{version}.aep'
    # The location of backups of WIP files
    aftereffects_shot_snapshot:
        definition: '@shot_work_area/aftereffects/snapshots/{name}.v{version}.{timestamp}.aep'
    # The location of published files
    shot_publish_area_aftereffects:
        definition: '@shot_publish_area/aftereffects'
    aftereffects_shot_publish:
        definition: '@shot_publish_area/aftereffects/{name}.v{version}.aep'
    aftereffects_shot_render_pub_mono:
        definition: '@shot_publish_area/elements/{name}/v{version}/{width}x{height}/{Shot}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_shot_render_movie:
        definition: '@shot_work_area/review/{Shot}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'


    #
    # Maya
    #

    # The location of WIP files
    shot_work_area_maya:
        definition: '@shot_work_area/maya'
    maya_shot_work:
        definition: '@shot_work_area/maya/{name}.v{version}.{maya_extension}'
    maya_shot_snapshot:
        definition: '@shot_work_area/maya/snapshots/{name}.v{version}.{timestamp}.{maya_extension}'

    # define the location of a publish area
    shot_publish_area_maya:
        definition: '@shot_publish_area/maya'
    maya_shot_publish:
        definition: '@shot_publish_area/maya/{name}.v{version}.{maya_extension}'


    #
    # Houdini
    #

    # The location of WIP files
    shot_work_area_houdini:
        definition: '@shot_work_area/houdini'
    houdini_shot_work:
        definition: '@shot_work_area/houdini/{name}.v{version}.hip'
    houdini_shot_snapshot:
        definition: '@shot_work_area/houdini/snapshots/{name}.v{version}.{timestamp}.hip'
    houdini_shot_work_alembic_cache:
        definition: '@shot_work_area/data/abc/{Shot}_{Step}_{houdini.node}/v{version}/{Shot}_{Step}_{houdini.node}_v{version}.abc'
    houdini_shot_work_bgeo_cache:
        definition: '@shot_work_area/data/bgeo/{Shot}_{Step}_{houdini.node}/v{version}/{Shot}_{Step}_{houdini.node}_v{version}.bgeo.sc'

    # define the location of a publish area
    shot_publish_area_houdini:
        definition: '@shot_publish_area/houdini'
    houdini_shot_publish:
        definition: '@shot_publish_area/houdini/{name}.v{version}.hip'

    # Rendered images
    houdini_shot_render:
        definition: '@shot_work_area/images/{Shot}_{Step}_{name}_v{version}/{Shot}_{Step}_{name}_{houdini.node}/{width}x{height}/{Shot}_{Step}_{name}_{houdini.node}_v{version}.{SEQ}.exr'

    # Additional mantra outputs
    houdini_shot_ifd:
        definition: '@shot_work_area/data/ifd/{Shot}_{Step}_{houdini.node}/v{version}/{width}x{height}/{Shot}_{Step}_{houdini.node}_v{version}.{SEQ}.ifd'
    houdini_shot_dcm:
        definition: '@shot_work_area/images/{Shot}_{Step}_{houdini.node}_deep/v{version}/{width}x{height}/{Shot}_{Step}_{houdini.node}_v{version}.{SEQ}.exr'
    houdini_shot_extra_plane:
        definition: '@shot_work_area/images/{Shot}_{Step}_{houdini.node}/{aov_name}/v{version}/{width}x{height}/{Shot}_{Step}_{houdini.node}_v{version}.{SEQ}.exr'

    # Redshift outputs
    houdini_shot_rs:
        definition: '@shot_work_area/data/rs/tmp/{Shot}_{Step}_{name}_v{version}/{Shot}_{Step}_{name}_{houdini.node}/{Shot}_{Step}_{name}_{houdini.node}_v{version}.{SEQ}.rs'


    #
    # 3dsmax
    #

    # The location of WIP files
    shot_work_area_max:
        definition: '@shot_work_area/3dsmax'
    max_shot_work:
        definition: '@shot_work_area/3dsmax/{name}.v{version}.max'
    max_shot_snapshot:
        definition: '@shot_work_area/3dsmax/snapshots/{name}.v{version}.{timestamp}.max'

    # The location of published max files
    shot_publish_area_max:
        definition: '@shot_publish_area/3dsmax'
    max_shot_publish:
        definition: '@shot_publish_area/3dsmax/{name}.v{version}.max'


    #
    # Motionbuilder
    #

    # The location of WIP files
    shot_work_area_mobu:
        definition: '@shot_work_area/mobu'
    mobu_shot_work:
        definition: '@shot_work_area/mobu/{name}.v{version}.fbx'
    mobu_shot_snapshot:
        definition: '@shot_work_area/mobu/snapshots/{name}.v{version}.{timestamp}.fbx'

    # The location of published mobu files
    shot_publish_area_mobu:
        definition: '@shot_publish_area/mobu'
    mobu_shot_publish:
        definition: '@shot_publish_area/mobu/{name}.v{version}.fbx'


    #
    # Nuke
    #

    # The location of WIP script files
    shot_work_area_nuke:
        definition: '@shot_work_area/nuke'
    nuke_shot_work:
        definition: '@shot_work_area/nuke/{name}.v{version}.nk'
    nuke_shot_snapshot:
        definition: '@shot_work_area/nuke/snapshots/{name}.v{version}.{timestamp}.nk'

    # The location of published nuke script files
    shot_publish_area_nuke:
        definition: '@shot_publish_area/nuke'
    nuke_shot_publish:
        definition: '@shot_publish_area/nuke/{name}.v{version}.nk'

    # Write node locations
    # main output
    nuke_shot_main_filename:
        definition: '{Shot}_{Step}_out[-{nuke.output}]_v{version}/{Shot}_{Step}_out[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_shot_main_work:
        definition: '@shot_work_area/images/@nuke_shot_main_filename'
    nuke_shot_main_publish:
        definition: '@shot_publish_area/images/@nuke_shot_main_filename'
    # dpx output
    nuke_shot_dpx_filename:
        definition: '{Shot}_{Step}_dpx[-{nuke.output}]_v{version}/{Shot}_{Step}_dpx[-{nuke.output}]_v{version}.{SEQ}.dpx'
    nuke_shot_dpx_work:
        definition: '@shot_work_area/images/@nuke_shot_dpx_filename'
    nuke_shot_dpx_publish:
        definition: '@shot_publish_area/images/@nuke_shot_dpx_filename'
    # precomp output
    nuke_shot_precomp_filename:
        definition: '{Shot}_{Step}_prc[-{nuke.output}]_v{version}/{Shot}_{Step}_prc[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_shot_precomp_work:
        definition: '@shot_work_area/images/@nuke_shot_precomp_filename'
    nuke_shot_precomp_publish:
        definition: '@shot_publish_area/images/@nuke_shot_precomp_filename'
    # smartvector output
    nuke_shot_smartvector_filename:
        definition: '{Shot}_{Step}_smrt[-{nuke.output}]_v{version}/{Shot}_{Step}_smrt[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_shot_smartvector_work:
        definition: '@shot_work_area/images/@nuke_shot_smartvector_filename'
    nuke_shot_smartvector_publish:
        definition: '@shot_publish_area/images/@nuke_shot_smartvector_filename'
    # matte output
    nuke_shot_matte_filename:
        definition: '{Shot}_{Step}_matte[-{nuke.output}]_v{version}/{Shot}_{Step}_matte[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_shot_matte_work:
        definition: '@shot_work_area/images/@nuke_shot_matte_filename'
    nuke_shot_matte_publish:
        definition: '@shot_publish_area/images/@nuke_shot_matte_filename'
    # review output
    nuke_shot_review_filename:
        definition: '{Shot}_{Step}_review[-{nuke.output}]_v{version}/{Shot}_{Step}_review[-{nuke.output}]_v{version}.{SEQ}.jpg'
    nuke_shot_review_work:
        definition: '@shot_work_area/images/@nuke_shot_review_filename'
    nuke_shot_review_publish:
        definition: '@shot_publish_area/images/@nuke_shot_review_filename'
    # demo output
    nuke_shot_demo_filename:
        definition: '{Shot}_{Step}_demo[-{nuke.output}]_v{version}/{Shot}_{Step}_demo[-{nuke.output}]_v{version}.{SEQ}.png'
    nuke_shot_demo_work:
        definition: '@shot_work_area/images/@nuke_shot_demo_filename'
    nuke_shot_demo_publish:
        definition: '@shot_publish_area/images/@nuke_shot_demo_filename'

    # reviewsubmission
    nuke_shot_render_movie:
        definition: '@shot_work_area/review/{Shot}_{name}_{nuke.output}_v{version}.mov'

    #
    # Hiero
    #

    # export of shot asset data from hiero
    hiero_plate_path:
        definition: '@shot_root/editorial/images/{Shot}_{track}/{Shot}_{track}.{SEQ}.exr'
    hiero_plate_qt_path:
        definition: '@shot_root/editorial/review/{Shot}_{track}.mov'
    hiero_audio_path:
        definition: '@shot_root/editorial/audio/{Shot}_{track}.wav'
    # hiero_render_path:
    #     definition: '@shot_root/editorial/images/{Shot}_comp_out_v{tk_version}/{Shot}_comp_out_v{tk_version}.{SEQ}.exr'
    # hiero_plate_path:
        # definition: 'sequences/{Sequence}/{Shot}/editorial/{YYYY}_{MM}_{DD}/plates/{project}_{Shot}.mov'
    # hiero_render_path:
        # definition: 'sequences/{Sequence}/{Shot}/editorial/{YYYY}_{MM}_{DD}/renders/{project}_{Shot}.{SEQ}.dpx'

    ##########################################################################################
    # Asset pipeline


    #
    # Alembic caches
    #

    asset_alembic_cache:
        definition: '@asset_publish_area/data/caches/{name}.v{version}.abc'


    #
    # Photoshop
    #

    # The location of WIP files
    asset_work_area_photoshop:
        definition: '@asset_work_area/photoshop'
    photoshop_asset_work:
        definition: '@asset_work_area/photoshop/{name}.v{version}.psd'
    photoshop_asset_snapshot:
        definition: '@asset_work_area/photoshop/snapshots/{name}.v{version}.{timestamp}.psd'

    # The location of published files
    asset_publish_area_photoshop:
        definition: '@asset_publish_area/photoshop'
    photoshop_asset_publish:
        definition: '@asset_publish_area/photoshop/{name}.v{version}.psd'


    #
    # AfterEffects
    #

    # The location of WIP files
    asset_work_area_aftereffects:
        definition: '@asset_work_area/aftereffects'
    aftereffects_asset_work:
        definition: '@asset_work_area/aftereffects/{name}.v{version}.aep'
    aftereffects_asset_snapshot:
        definition: '@asset_work_area/aftereffects/snapshots/{name}.v{version}.{timestamp}.aep'

    # The location of published files
    asset_publish_area_aftereffects:
        definition: '@asset_publish_area/aftereffects'
    aftereffects_asset_publish:
        definition: '@asset_publish_area/aftereffects/{name}.v{version}.aep'

    #
    # after effects
    #

    # The location of WIP files
    aftereffects_asset_work:
        definition: '@asset_root/work/afx/{name}.v{version}.aep'
    asset_work_area_aftereffects:
        definition: '@asset_root/work/afx'
    # The location of backups of WIP files
    aftereffects_asset_snapshot:
        definition: '@asset_root/work/afx/snapshots/{name}.v{version}.{timestamp}.aep'
    # The location of published files
    asset_publish_area_aftereffects:
        definition: '@asset_root/publish/afx'
    aftereffects_asset_publish:
        definition: '@asset_root/publish/afx/{name}.v{version}.aep'
    aftereffects_asset_render_pub_mono:
        definition: '@asset_root/publish/elements/{name}/v{version}/{width}x{height}/{Asset}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_asset_render_movie:
        definition: '@asset_root/review/{Asset}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'


    #
    # Mari
    #
    asset_mari_texture_tif:
        definition: '@asset_publish_area/images/mari/{name}_{mari.channel}[_{mari.layer}].v{version}.{UDIM}.tif'

    #
    # Maya
    #

    # The location of WIP files
    asset_work_area_maya:
        definition: '@asset_work_area/maya'
    maya_asset_work:
        definition: '@asset_work_area/maya/{name}.v{version}.{maya_extension}'
    maya_asset_snapshot:
        definition: '@asset_work_area/maya/snapshots/{name}.v{version}.{timestamp}.{maya_extension}'

    # define the location of a publish area
    asset_publish_area_maya:
        definition: '@asset_publish_area/maya'
    maya_asset_publish:
        definition: '@asset_publish_area/maya/{name}.v{version}.{maya_extension}'


    #
    # Houdini
    #

    # The location of WIP files
    asset_work_area_houdini:
        definition: '@asset_work_area/houdini'
    houdini_asset_work:
        definition: '@asset_work_area/houdini/{name}.v{version}.hip'
    houdini_asset_snapshot:
        definition: '@asset_work_area/houdini/snapshots/{name}.v{version}.{timestamp}.hip'
    houdini_asset_work_alembic_cache:
        definition: '@asset_work_area/data/abc/{Asset}_{Step}_{houdini.node}/v{version}/{Asset}_{Step}_{houdini.node}_v{version}.abc'
    houdini_shot_work_bgeo_cache:
        definition: '@asset_work_area/data/bgeo/{Asset}_{Step}_{houdini.node}/v{version}/{Asset}_{Step}_{houdini.node}_v{version}.bgeo.sc'

    # define the location of a publish area
    asset_publish_area_houdini:
        definition: '@asset_publish_area/houdini'
    houdini_asset_publish:
        definition: '@asset_publish_area/houdini/{name}.v{version}.hip'

    # Rendered images
    houdini_asset_render:
        definition: '@asset_work_area/images/{Asset}_{Step}_{houdini.node}/v{version}/{width}x{height}/{Asset}_{Step}_{houdini.node}_v{version}.{SEQ}.exr'

    # Additional mantra outputs
    houdini_asset_ifd:
        definition: '@asset_work_area/data/ifd/{Asset}_{Step}_{houdini.node}/v{version}/{width}x{height}/{Asset}_{Step}_{houdini.node}_v{version}.{SEQ}.ifd'
    houdini_asset_dcm:
        definition: '@asset_work_area/images/{Asset}_{Step}_{houdini.node}_deep/v{version}/{width}x{height}/{Asset}_{Step}_{houdini.node}_v{version}.{SEQ}.exr'
    houdini_asset_extra_plane:
        definition: '@asset_work_area/images/{Asset}_{Step}_{houdini.node}/{aov_name}/v{version}/{width}x{height}/{Asset}_{Step}_{houdini.node}_v{version}.{SEQ}.exr'

    # Redshift outputs
    houdini_shot_rs:
        definition: '@asset_work_area/data/rs/{Asset}_{Step}_{houdini.node}/v{version}/{width}x{height}/{Asset}_{Step}_{houdini.node}_v{version}.{SEQ}.rs'

    #
    # 3dsmax
    #

    # The location of WIP files
    asset_work_area_max:
        definition: '@asset_work_area/3dsmax'
    max_asset_work:
        definition: '@asset_work_area/3dsmax/{name}.v{version}.max'
    max_asset_snapshot:
        definition: '@asset_work_area/3dsmax/snapshots/{name}.v{version}.{timestamp}.max'

    # The location of published max files
    asset_publish_area_max:
        definition: '@asset_publish_area/3dsmax'
    max_asset_publish:
        definition: '@asset_publish_area/3dsmax/{name}.v{version}.max'


    #
    # Motionbuilder
    #

    # The location of WIP files
    asset_work_area_mobu:
        definition: '@asset_work_area/mobu'
    mobu_asset_work:
        definition: '@asset_work_area/mobu/{name}.v{version}.fbx'
    mobu_asset_snapshot:
        definition: '@asset_work_area/mobu/snapshots/{name}.v{version}.{timestamp}.fbx'

    # The location of published mobu files
    asset_publish_area_mobu:
        definition: '@asset_publish_area/mobu'
    mobu_asset_publish:
        definition: '@asset_publish_area/mobu/{name}.v{version}.fbx'


    #
    # Nuke
    #

    # The location of WIP script files
    asset_work_area_nuke:
        definition: '@asset_work_area/nuke'
    nuke_asset_work:
        definition: '@asset_work_area/nuke/{name}.v{version}.nk'
    nuke_asset_snapshot:
        definition: '@asset_work_area/nuke/snapshots/{name}.v{version}.{timestamp}.nk'

    # The location of published nuke script files
    asset_publish_area_nuke:
        definition: '@asset_publish_area/nuke'
    nuke_asset_publish:
        definition: '@asset_publish_area/nuke/{name}.v{version}.nk'

    # Write node locations
    # main output
    nuke_asset_main_filename:
        definition: '{Asset}_{Step}_out[-{nuke.output}]_v{version}/Assett}_{Step}_out[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_asset_main_work:
        definition: '@asset_work_area/images/@nuke_asset_main_filename'
    nuke_asset_main_publish:
        definition: '@asset_publish_area/images/@nuke_asset_main_filename'
    # precomp output
    nuke_asset_precomp_filename:
        definition: '{Asset}_{Step}_prc[-{nuke.output}]_v{version}/{Asset}_{Step}_prc[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_asset_precomp_work:
        definition: '@asset_work_area/images/@nuke_asset_precomp_filename'
    nuke_asset_precomp_publish:
        definition: '@asset_publish_area/images/@nuke_asset_precomp_filename'
    # smartvector output
    nuke_asset_smartvector_filename:
        definition: '{Asset}_{Step}_smrt[-{nuke.output}]_v{version}/{Asset}_{Step}_smrt[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_asset_smartvector_work:
        definition: '@asset_work_area/images/@nuke_asset_smartvector_filename'
    nuke_asset_smartvector_publish:
        definition: '@asset_publish_area/images/@nuke_asset_smartvector_filename'
    # matte output
    nuke_asset_matte_filename:
        definition: '{Asset}_{Step}_matte[-{nuke.output}]_v{version}/{Asset}_{Step}_matte[-{nuke.output}]_v{version}.{SEQ}.exr'
    nuke_asset_matte_work:
        definition: '@asset_work_area/images/@nuke_shot_matte_filename'
    nuke_asset_matte_publish:
        definition: '@asset_publish_area/images/@nuke_shot_matte_filename'
    # review output
    nuke_asset_review_filename:
        definition: '{Asset}_{Step}_review[-{nuke.output}]_v{version}/{Asset}_{Step}_review[-{nuke.output}]_v{version}.{SEQ}.jpg'
    nuke_asset_review_work:
        definition: '@asset_work_area/images/@nuke_asset_review_filename'
    nuke_asset_review_publish:
        definition: '@asset_publish_area/images/@nuke_asset_review_filename'
    # demo output
    nuke_asset_demo_filename:
        definition: '{Asset}_{Step}_demo[-{nuke.output}]_v{version}/{Asset}_{Step}_demo[-{nuke.output}]_v{version}.{SEQ}.png'
    nuke_asset_demo_work:
        definition: '@asset_work_area/images/@nuke_asset_demo_filename'
    nuke_asset_demo_publish:
        definition: '@asset_publish_area/images/@nuke_asset_demo_filename'

    # reviewsubmission
    nuke_asset_render_movie:
        definition: '@asset_work_area/review/{Asset}_{name}_{nuke.output}_v{version}.mov'


#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:

    # when a review Version in Shotgun is created inside of Nuke, this is the
    # name that is being given to it (the code field)
    nuke_shot_version_name: "{Shot}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"

    nuke_asset_version_name: "{Asset}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"

    # defines how the {tk_version} token in Hiero gets formatted back to tk.
    hiero_version: "{version}"

    # define how new Mari projects should be named
    mari_asset_project_name: "{mari.project_name} - Asset {asset_name}, {task_name}"
